name: Movie Data Auto Update

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 (0시, 6시, 12시, 18시)
  workflow_dispatch:  # 수동 실행도 가능

jobs:
  update-movies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Update movie rankings
      env:
        KOBIS_KEY: ${{ secrets.KOBIS_API_KEY }}
      run: |
        pip install requests
        python -c "
        import requests, json, os
        from datetime import datetime, timedelta
        
        print('🎬 영화 순위 업데이트 시작...')
        
        # API 설정 (수정 가능한 부분들)
        api_key = os.environ['KOBIS_KEY']
        target_date = (datetime.now() - timedelta(days=1)).strftime('%Y%m%d')  # 어제 날짜
        movie_count = 10  # 가져올 영화 개수 (1~10)
        
        print(f'📅 조회 날짜: {target_date}')
        print(f'📊 영화 개수: {movie_count}개')
        
        # KOBIS API 호출
        api_url = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json'
        params = {
            'key': api_key,
            'targetDt': target_date,
            'itemPerPage': movie_count,
            # 'repNationCd': 'K',  # 한국영화만 원하면 주석 해제
            # 'wideAreaCd': '01'   # 특정 지역만 원하면 주석 해제 (01=서울)
        }
        
        response = requests.get(api_url, params=params)
        response.raise_for_status()
        result = response.json()
        
        # 데이터 정리
        movie_data = {
            'updateTime': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
            'targetDate': target_date,
            'totalMovies': len(result['boxOfficeResult']['dailyBoxOfficeList']),
            'movies': result['boxOfficeResult']['dailyBoxOfficeList']
        }
        
        # JSON 파일 저장
        with open('movies.json', 'w', encoding='utf-8') as f:
            json.dump(movie_data, f, ensure_ascii=False, indent=2)
        
        print(f'✅ 성공! {movie_data[\"totalMovies\"]}개 영화 데이터 업데이트 완료')
        print(f'🕐 업데이트 시간: {movie_data[\"updateTime\"]}')
        "
        
    - name: Commit and push
      run: |
        git config user.name "Movie Bot"
        git config user.email "moviebot@example.com"
        git add movies.json
        if git diff --staged --quiet; then
          echo "변경사항 없음"
        else
          git commit -m "🎬 영화 순위 자동 업데이트 $(date +'%Y-%m-%d %H:%M')"
          git push
          echo "✅ 업데이트 완료"
        fi
